function main() {
    const canvas = document.getElementById('julia-set-context');
    const gl = canvas.getContext('webgl2');
    if (!gl) {
        return;
    }
    canvas.classList.remove('hide');
    const vertexShaderSrc = `#version 300 es
in vec2 i_position;
void main() {
  gl_Position = vec4(i_position, 0.0, 1.0);
}`;
    const fragmentShaderSrc = `#version 300 es
precision highp float;

const uint color_count = uint(256);
const vec3 colors[color_count] = vec3[](
  vec3(0.0, 0.12549019607843137, 0.2980392156862745),
  vec3(0.0, 0.12549019607843137, 0.3058823529411765),
  vec3(0.0, 0.12941176470588237, 0.3137254901960784),
  vec3(0.0, 0.13333333333333333, 0.3176470588235294),
  vec3(0.0, 0.13725490196078433, 0.3254901960784314),
  vec3(0.0, 0.13725490196078433, 0.3333333333333333),
  vec3(0.0, 0.1411764705882353, 0.33725490196078434),
  vec3(0.0, 0.1450980392156863, 0.34509803921568627),
  vec3(0.0, 0.14901960784313725, 0.35294117647058826),
  vec3(0.0, 0.14901960784313725, 0.3568627450980392),
  vec3(0.0, 0.15294117647058825, 0.36470588235294116),
  vec3(0.0, 0.1568627450980392, 0.37254901960784315),
  vec3(0.0, 0.1568627450980392, 0.3803921568627451),
  vec3(0.0, 0.1607843137254902, 0.38823529411764707),
  vec3(0.0, 0.16470588235294117, 0.39215686274509803),
  vec3(0.0, 0.16470588235294117, 0.4),
  vec3(0.0, 0.16862745098039217, 0.40784313725490196),
  vec3(0.0, 0.17254901960784313, 0.41568627450980394),
  vec3(0.0, 0.17647058823529413, 0.4235294117647059),
  vec3(0.0, 0.17647058823529413, 0.42745098039215684),
  vec3(0.0, 0.1803921568627451, 0.43137254901960786),
  vec3(0.0, 0.1803921568627451, 0.43529411764705883),
  vec3(0.0, 0.1843137254901961, 0.43529411764705883),
  vec3(0.0, 0.1843137254901961, 0.43529411764705883),
  vec3(0.0, 0.18823529411764706, 0.43529411764705883),
  vec3(0.0, 0.19215686274509805, 0.43529411764705883),
  vec3(0.0, 0.19215686274509805, 0.43529411764705883),
  vec3(0.0, 0.19607843137254902, 0.43137254901960786),
  vec3(0.0, 0.2, 0.43137254901960786),
  vec3(0.0, 0.20392156862745098, 0.43137254901960786),
  vec3(0.0, 0.20392156862745098, 0.43137254901960786),
  vec3(0.00392156862745098, 0.20784313725490197, 0.43137254901960786),
  vec3(0.023529411764705882, 0.21176470588235294, 0.43137254901960786),
  vec3(0.0392156862745098, 0.21568627450980393, 0.42745098039215684),
  vec3(0.054901960784313725, 0.21568627450980393, 0.42745098039215684),
  vec3(0.07058823529411765, 0.2196078431372549, 0.42745098039215684),
  vec3(0.08235294117647059, 0.2235294117647059, 0.42745098039215684),
  vec3(0.09019607843137255, 0.2235294117647059, 0.42745098039215684),
  vec3(0.10196078431372549, 0.22745098039215686, 0.4235294117647059),
  vec3(0.10980392156862745, 0.23137254901960785, 0.4235294117647059),
  vec3(0.11764705882352941, 0.23529411764705882, 0.4235294117647059),
  vec3(0.12549019607843137, 0.23529411764705882, 0.4235294117647059),
  vec3(0.13333333333333333, 0.23921568627450981, 0.4235294117647059),
  vec3(0.1411764705882353, 0.24313725490196078, 0.4235294117647059),
  vec3(0.14901960784313725, 0.24313725490196078, 0.4235294117647059),
  vec3(0.15294117647058825, 0.24705882352941178, 0.4235294117647059),
  vec3(0.1607843137254902, 0.25098039215686274, 0.4196078431372549),
  vec3(0.16862745098039217, 0.2549019607843137, 0.4196078431372549),
  vec3(0.17254901960784313, 0.2549019607843137, 0.4196078431372549),
  vec3(0.1803921568627451, 0.25882352941176473, 0.4196078431372549),
  vec3(0.1843137254901961, 0.2627450980392157, 0.4196078431372549),
  vec3(0.19215686274509805, 0.26666666666666666, 0.4196078431372549),
  vec3(0.19607843137254902, 0.26666666666666666, 0.4196078431372549),
  vec3(0.2, 0.27058823529411763, 0.4196078431372549),
  vec3(0.20784313725490197, 0.27450980392156865, 0.4196078431372549),
  vec3(0.21176470588235294, 0.27450980392156865, 0.4196078431372549),
  vec3(0.21568627450980393, 0.2784313725490196, 0.4196078431372549),
  vec3(0.2196078431372549, 0.2823529411764706, 0.4196078431372549),
  vec3(0.22745098039215686, 0.28627450980392155, 0.4196078431372549),
  vec3(0.23137254901960785, 0.28627450980392155, 0.4196078431372549),
  vec3(0.23529411764705882, 0.2901960784313726, 0.4196078431372549),
  vec3(0.23921568627450981, 0.29411764705882354, 0.4196078431372549),
  vec3(0.24313725490196078, 0.29411764705882354, 0.4196078431372549),
  vec3(0.25098039215686274, 0.2980392156862745, 0.4196078431372549),
  vec3(0.2549019607843137, 0.30196078431372547, 0.4196078431372549),
  vec3(0.25882352941176473, 0.3058823529411765, 0.4196078431372549),
  vec3(0.2627450980392157, 0.3058823529411765, 0.4196078431372549),
  vec3(0.26666666666666666, 0.30980392156862746, 0.4196078431372549),
  vec3(0.27058823529411763, 0.3137254901960784, 0.4196078431372549),
  vec3(0.27450980392156865, 0.3137254901960784, 0.4196078431372549),
  vec3(0.2784313725490196, 0.3176470588235294, 0.4196078431372549),
  vec3(0.2823529411764706, 0.3215686274509804, 0.4196078431372549),
  vec3(0.28627450980392155, 0.3254901960784314, 0.4196078431372549),
  vec3(0.2901960784313726, 0.3254901960784314, 0.4196078431372549),
  vec3(0.29411764705882354, 0.32941176470588235, 0.4196078431372549),
  vec3(0.2980392156862745, 0.3333333333333333, 0.4196078431372549),
  vec3(0.30196078431372547, 0.3333333333333333, 0.4196078431372549),
  vec3(0.3058823529411765, 0.33725490196078434, 0.4196078431372549),
  vec3(0.30980392156862746, 0.3411764705882353, 0.4235294117647059),
  vec3(0.3137254901960784, 0.34509803921568627, 0.4235294117647059),
  vec3(0.3176470588235294, 0.34509803921568627, 0.4235294117647059),
  vec3(0.3215686274509804, 0.34901960784313724, 0.4235294117647059),
  vec3(0.3254901960784314, 0.35294117647058826, 0.4235294117647059),
  vec3(0.32941176470588235, 0.35294117647058826, 0.4235294117647059),
  vec3(0.3333333333333333, 0.3568627450980392, 0.4235294117647059),
  vec3(0.33725490196078434, 0.3607843137254902, 0.4235294117647059),
  vec3(0.3411764705882353, 0.36470588235294116, 0.42745098039215684),
  vec3(0.34509803921568627, 0.36470588235294116, 0.42745098039215684),
  vec3(0.34901960784313724, 0.3686274509803922, 0.42745098039215684),
  vec3(0.35294117647058826, 0.37254901960784315, 0.42745098039215684),
  vec3(0.3568627450980392, 0.37254901960784315, 0.42745098039215684),
  vec3(0.3607843137254902, 0.3764705882352941, 0.42745098039215684),
  vec3(0.36470588235294116, 0.3803921568627451, 0.43137254901960786),
  vec3(0.3686274509803922, 0.3843137254901961, 0.43137254901960786),
  vec3(0.37254901960784315, 0.3843137254901961, 0.43137254901960786),
  vec3(0.37254901960784315, 0.38823529411764707, 0.43137254901960786),
  vec3(0.3764705882352941, 0.39215686274509803, 0.43137254901960786),
  vec3(0.3803921568627451, 0.396078431372549, 0.43529411764705883),
  vec3(0.3843137254901961, 0.396078431372549, 0.43529411764705883),
  vec3(0.38823529411764707, 0.4, 0.43529411764705883),
  vec3(0.39215686274509803, 0.403921568627451, 0.43529411764705883),
  vec3(0.396078431372549, 0.403921568627451, 0.43529411764705883),
  vec3(0.4, 0.40784313725490196, 0.4392156862745098),
  vec3(0.403921568627451, 0.4117647058823529, 0.4392156862745098),
  vec3(0.40784313725490196, 0.41568627450980394, 0.4392156862745098),
  vec3(0.40784313725490196, 0.41568627450980394, 0.4392156862745098),
  vec3(0.4117647058823529, 0.4196078431372549, 0.44313725490196076),
  vec3(0.41568627450980394, 0.4235294117647059, 0.44313725490196076),
  vec3(0.4196078431372549, 0.42745098039215684, 0.44313725490196076),
  vec3(0.4235294117647059, 0.42745098039215684, 0.4470588235294118),
  vec3(0.42745098039215684, 0.43137254901960786, 0.4470588235294118),
  vec3(0.43137254901960786, 0.43529411764705883, 0.4470588235294118),
  vec3(0.43529411764705883, 0.43529411764705883, 0.4470588235294118),
  vec3(0.43529411764705883, 0.4392156862745098, 0.45098039215686275),
  vec3(0.4392156862745098, 0.44313725490196076, 0.45098039215686275),
  vec3(0.44313725490196076, 0.4470588235294118, 0.45098039215686275),
  vec3(0.4470588235294118, 0.4470588235294118, 0.4549019607843137),
  vec3(0.45098039215686275, 0.45098039215686275, 0.4549019607843137),
  vec3(0.4549019607843137, 0.4549019607843137, 0.4588235294117647),
  vec3(0.4588235294117647, 0.4588235294117647, 0.4588235294117647),
  vec3(0.4588235294117647, 0.4588235294117647, 0.4588235294117647),
  vec3(0.4627450980392157, 0.4627450980392157, 0.4627450980392157),
  vec3(0.4666666666666667, 0.4666666666666667, 0.4627450980392157),
  vec3(0.47058823529411764, 0.47058823529411764, 0.4627450980392157),
  vec3(0.4745098039215686, 0.47058823529411764, 0.4666666666666667),
  vec3(0.47843137254901963, 0.4745098039215686, 0.4666666666666667),
  vec3(0.4823529411764706, 0.47843137254901963, 0.4666666666666667),
  vec3(0.4823529411764706, 0.4823529411764706, 0.47058823529411764),
  vec3(0.48627450980392156, 0.4823529411764706, 0.47058823529411764),
  vec3(0.49019607843137253, 0.48627450980392156, 0.47058823529411764),
  vec3(0.49411764705882355, 0.49019607843137253, 0.47058823529411764),
  vec3(0.4980392156862745, 0.49411764705882355, 0.47058823529411764),
  vec3(0.5019607843137255, 0.49411764705882355, 0.47058823529411764),
  vec3(0.5058823529411764, 0.4980392156862745, 0.47058823529411764),
  vec3(0.5098039215686274, 0.5019607843137255, 0.47058823529411764),
  vec3(0.5137254901960784, 0.5058823529411764, 0.47058823529411764),
  vec3(0.5176470588235295, 0.5058823529411764, 0.47058823529411764),
  vec3(0.5215686274509804, 0.5098039215686274, 0.47058823529411764),
  vec3(0.5254901960784314, 0.5137254901960784, 0.47058823529411764),
  vec3(0.5294117647058824, 0.5176470588235295, 0.47058823529411764),
  vec3(0.5333333333333333, 0.5215686274509804, 0.47058823529411764),
  vec3(0.5372549019607843, 0.5215686274509804, 0.47058823529411764),
  vec3(0.5411764705882353, 0.5254901960784314, 0.47058823529411764),
  vec3(0.5450980392156862, 0.5294117647058824, 0.47058823529411764),
  vec3(0.5490196078431373, 0.5333333333333333, 0.47058823529411764),
  vec3(0.5529411764705883, 0.5333333333333333, 0.47058823529411764),
  vec3(0.5568627450980392, 0.5372549019607843, 0.47058823529411764),
  vec3(0.5607843137254902, 0.5411764705882353, 0.47058823529411764),
  vec3(0.5647058823529412, 0.5450980392156862, 0.47058823529411764),
  vec3(0.5686274509803921, 0.5490196078431373, 0.47058823529411764),
  vec3(0.5725490196078431, 0.5490196078431373, 0.47058823529411764),
  vec3(0.5764705882352941, 0.5529411764705883, 0.47058823529411764),
  vec3(0.5803921568627451, 0.5568627450980392, 0.47058823529411764),
  vec3(0.5843137254901961, 0.5607843137254902, 0.47058823529411764),
  vec3(0.5882352941176471, 0.5607843137254902, 0.4666666666666667),
  vec3(0.592156862745098, 0.5647058823529412, 0.4666666666666667),
  vec3(0.596078431372549, 0.5686274509803921, 0.4666666666666667),
  vec3(0.6, 0.5725490196078431, 0.4666666666666667),
  vec3(0.6039215686274509, 0.5764705882352941, 0.4666666666666667),
  vec3(0.6078431372549019, 0.5764705882352941, 0.4666666666666667),
  vec3(0.611764705882353, 0.5803921568627451, 0.4666666666666667),
  vec3(0.615686274509804, 0.5843137254901961, 0.4666666666666667),
  vec3(0.6196078431372549, 0.5882352941176471, 0.4627450980392157),
  vec3(0.6235294117647059, 0.592156862745098, 0.4627450980392157),
  vec3(0.6274509803921569, 0.596078431372549, 0.4627450980392157),
  vec3(0.6313725490196078, 0.596078431372549, 0.4627450980392157),
  vec3(0.6352941176470588, 0.6, 0.4627450980392157),
  vec3(0.6392156862745098, 0.6039215686274509, 0.4588235294117647),
  vec3(0.6431372549019608, 0.6078431372549019, 0.4588235294117647),
  vec3(0.6470588235294118, 0.611764705882353, 0.4588235294117647),
  vec3(0.6509803921568628, 0.611764705882353, 0.4588235294117647),
  vec3(0.6549019607843137, 0.615686274509804, 0.4588235294117647),
  vec3(0.6588235294117647, 0.6196078431372549, 0.4549019607843137),
  vec3(0.6627450980392157, 0.6235294117647059, 0.4549019607843137),
  vec3(0.6666666666666666, 0.6274509803921569, 0.4549019607843137),
  vec3(0.6705882352941176, 0.6313725490196078, 0.4549019607843137),
  vec3(0.6745098039215687, 0.6313725490196078, 0.45098039215686275),
  vec3(0.6784313725490196, 0.6352941176470588, 0.45098039215686275),
  vec3(0.6823529411764706, 0.6392156862745098, 0.45098039215686275),
  vec3(0.6862745098039216, 0.6431372549019608, 0.45098039215686275),
  vec3(0.6901960784313725, 0.6470588235294118, 0.4470588235294118),
  vec3(0.6941176470588235, 0.6509803921568628, 0.4470588235294118),
  vec3(0.6980392156862745, 0.6509803921568628, 0.4470588235294118),
  vec3(0.7058823529411765, 0.6549019607843137, 0.44313725490196076),
  vec3(0.7098039215686275, 0.6588235294117647, 0.44313725490196076),
  vec3(0.7137254901960784, 0.6627450980392157, 0.44313725490196076),
  vec3(0.7176470588235294, 0.6666666666666666, 0.4392156862745098),
  vec3(0.7215686274509804, 0.6705882352941176, 0.4392156862745098),
  vec3(0.7254901960784313, 0.6705882352941176, 0.4392156862745098),
  vec3(0.7294117647058823, 0.6745098039215687, 0.43529411764705883),
  vec3(0.7333333333333333, 0.6784313725490196, 0.43529411764705883),
  vec3(0.7372549019607844, 0.6823529411764706, 0.43137254901960786),
  vec3(0.7411764705882353, 0.6862745098039216, 0.43137254901960786),
  vec3(0.7450980392156863, 0.6901960784313725, 0.43137254901960786),
  vec3(0.7490196078431373, 0.6941176470588235, 0.42745098039215684),
  vec3(0.7529411764705882, 0.6941176470588235, 0.42745098039215684),
  vec3(0.7568627450980392, 0.6980392156862745, 0.4235294117647059),
  vec3(0.7607843137254902, 0.7019607843137254, 0.4235294117647059),
  vec3(0.7686274509803922, 0.7058823529411765, 0.4235294117647059),
  vec3(0.7725490196078432, 0.7098039215686275, 0.4196078431372549),
  vec3(0.7764705882352941, 0.7137254901960784, 0.4196078431372549),
  vec3(0.7803921568627451, 0.7176470588235294, 0.41568627450980394),
  vec3(0.7843137254901961, 0.7215686274509804, 0.41568627450980394),
  vec3(0.788235294117647, 0.7215686274509804, 0.4117647058823529),
  vec3(0.792156862745098, 0.7254901960784313, 0.4117647058823529),
  vec3(0.796078431372549, 0.7294117647058823, 0.40784313725490196),
  vec3(0.8, 0.7333333333333333, 0.40784313725490196),
  vec3(0.803921568627451, 0.7372549019607844, 0.403921568627451),
  vec3(0.807843137254902, 0.7411764705882353, 0.403921568627451),
  vec3(0.8117647058823529, 0.7450980392156863, 0.4),
  vec3(0.8196078431372549, 0.7490196078431373, 0.4),
  vec3(0.8235294117647058, 0.7529411764705882, 0.396078431372549),
  vec3(0.8274509803921568, 0.7529411764705882, 0.396078431372549),
  vec3(0.8313725490196079, 0.7568627450980392, 0.39215686274509803),
  vec3(0.8352941176470589, 0.7607843137254902, 0.38823529411764707),
  vec3(0.8392156862745098, 0.7647058823529411, 0.38823529411764707),
  vec3(0.8431372549019608, 0.7686274509803922, 0.3843137254901961),
  vec3(0.8470588235294118, 0.7725490196078432, 0.3843137254901961),
  vec3(0.8509803921568627, 0.7764705882352941, 0.3803921568627451),
  vec3(0.8588235294117647, 0.7803921568627451, 0.3764705882352941),
  vec3(0.8627450980392157, 0.7843137254901961, 0.3764705882352941),
  vec3(0.8666666666666667, 0.788235294117647, 0.37254901960784315),
  vec3(0.8705882352941177, 0.792156862745098, 0.3686274509803922),
  vec3(0.8745098039215686, 0.796078431372549, 0.36470588235294116),
  vec3(0.8784313725490196, 0.796078431372549, 0.36470588235294116),
  vec3(0.8823529411764706, 0.8, 0.3607843137254902),
  vec3(0.8901960784313725, 0.803921568627451, 0.3568627450980392),
  vec3(0.8941176470588236, 0.807843137254902, 0.3568627450980392),
  vec3(0.8980392156862745, 0.8117647058823529, 0.35294117647058826),
  vec3(0.9019607843137255, 0.8156862745098039, 0.34901960784313724),
  vec3(0.9058823529411765, 0.8196078431372549, 0.34509803921568627),
  vec3(0.9098039215686274, 0.8235294117647058, 0.3411764705882353),
  vec3(0.9137254901960784, 0.8274509803921568, 0.33725490196078434),
  vec3(0.9215686274509803, 0.8313725490196079, 0.33725490196078434),
  vec3(0.9254901960784314, 0.8352941176470589, 0.3333333333333333),
  vec3(0.9294117647058824, 0.8392156862745098, 0.32941176470588235),
  vec3(0.9333333333333333, 0.8431372549019608, 0.3254901960784314),
  vec3(0.9372549019607843, 0.8470588235294118, 0.3215686274509804),
  vec3(0.9411764705882353, 0.8509803921568627, 0.3176470588235294),
  vec3(0.9490196078431372, 0.8549019607843137, 0.3137254901960784),
  vec3(0.9529411764705882, 0.8588235294117647, 0.30980392156862746),
  vec3(0.9568627450980393, 0.8627450980392157, 0.3058823529411765),
  vec3(0.9607843137254902, 0.8666666666666667, 0.30196078431372547),
  vec3(0.9647058823529412, 0.8705882352941177, 0.2980392156862745),
  vec3(0.9686274509803922, 0.8745098039215686, 0.29411764705882354),
  vec3(0.9764705882352941, 0.8784313725490196, 0.28627450980392155),
  vec3(0.9803921568627451, 0.8784313725490196, 0.2823529411764706),
  vec3(0.984313725490196, 0.8823529411764706, 0.2784313725490196),
  vec3(0.9882352941176471, 0.8862745098039215, 0.27450980392156865),
  vec3(0.9921568627450981, 0.8901960784313725, 0.27058823529411763),
  vec3(1.0, 0.8941176470588236, 0.2627450980392157),
  vec3(1.0, 0.8980392156862745, 0.25882352941176473),
  vec3(1.0, 0.9019607843137255, 0.25882352941176473),
  vec3(1.0, 0.9058823529411765, 0.2627450980392157),
  vec3(1.0, 0.9098039215686274, 0.26666666666666666),
  vec3(1.0, 0.9137254901960784, 0.27058823529411763)
);

uniform uint width;
uniform uint height;
uniform uint max_iterations;
uniform vec2 c;
out vec4 o_color;

vec2 cx_multiply(vec2 a, vec2 b) {
  return vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);
}

vec3 map_color(float potential) {
  uint index = clamp(uint(potential), uint(0), color_count - uint(1));
  return mix(colors[index], colors[min(index + uint(1), color_count - uint(1))], fract(potential));
}

float gamma(float channel) {
  if (channel <= 0.0031308)
  {
    return 12.92 * channel;
  }
  return pow(channel, 1.0 / 2.4) - 0.055;
}

vec3 gamma(vec3 color) {
  return vec3(gamma(color.r), gamma(color.g), gamma(color.b));
}

void main() {
  vec2 z = vec2((-2.0 + gl_FragCoord.x * (4.0 / float(width))),
                (-2.0 + gl_FragCoord.y * (4.0 / float(height))));
  uint i;
  for (i = uint(0); length(z) <= float(256) && i < max_iterations; ++i)
  {
    z = cx_multiply(z, z) + c;
  }
  float potential = (float(i < max_iterations) * (float(i) + float(1) - log2(max(log2(length(z)), 1e-10)))) +
                    (float(i >= max_iterations) * float(i));
  o_color = vec4(gamma(map_color(potential)), 1.0);
}`

    const vertexShader = gl.createShader(gl.VERTEX_SHADER);
    gl.shaderSource(vertexShader, vertexShaderSrc);
    gl.compileShader(vertexShader);
    console.log(gl.getShaderInfoLog(vertexShader));
    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(fragmentShader, fragmentShaderSrc);
    gl.compileShader(fragmentShader);
    console.log(gl.getShaderInfoLog(fragmentShader));
    const graphicsProgram = gl.createProgram();
    gl.attachShader(graphicsProgram, vertexShader);
    gl.attachShader(graphicsProgram, fragmentShader);
    gl.linkProgram(graphicsProgram);
    const widthUni = gl.getUniformLocation(graphicsProgram, 'width');
    const heightUni = gl.getUniformLocation(graphicsProgram, 'height');
    const maxIterationsUni = gl.getUniformLocation(graphicsProgram,'max_iterations');
    const cUni = gl.getUniformLocation(graphicsProgram, 'c');
    const positionAttr = gl.getAttribLocation(graphicsProgram, 'i_position');

    const vertices = [
      -1.0, -1.0,
      -1.0, 1.0,
      1.0, 1.0,
      1.0, -1.0
    ];

    const indices = [
      0, 1, 2, 0, 2, 3
    ];
    const vao = gl.createVertexArray();
    gl.bindVertexArray(vao);
    const vbo = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);
    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);
    const ebo = gl.createBuffer();
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ebo);
    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint32Array(indices), gl.STATIC_DRAW);
    gl.enableVertexAttribArray(positionAttr);
    gl.vertexAttribPointer(positionAttr, 2, gl.FLOAT, false, 8, 0);

    let last = performance.now();
    let dt = 0;
    const A_MAX = 2 * Math.PI;
    const A_MIN = 0;
    const ANIMATION_SPEED = 5.0;
    let a = 0;
    let a_factor = -0.01 * ANIMATION_SPEED;
    let req = 0;

    const drawScene = (timestamp, firstFrame = false) => {
        gl.bindVertexArray(vao);
        gl.useProgram(graphicsProgram);
        gl.uniform1ui(widthUni, 640);
        gl.uniform1ui(heightUni, 360);
        gl.uniform1ui(maxIterationsUni, 1000);
        gl.uniform2fv(cUni, new Float32Array([0.7885 * Math.cos(a), 0.7885 * Math.sin(a)]));
        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_INT, 0);
        if (!firstFrame)
        {
          req = requestAnimationFrame(drawScene);
        }
        if (a <= A_MIN || a >= A_MAX)
        {
          a_factor *= -1.0;
        }
        a += a_factor * dt;
        dt = (performance.now() - last) / 1000;
        last = performance.now();
    };
    const onBlur = () => {
      if (req)
      {
        cancelAnimationFrame(req);
        console.log(`Animation Paused. Frame ${req} canceled.`);
        req = 0;
      }
    };
    const onFocus = () => {
      if (!req)
      {
        last = performance.now();
        dt = 0;
        req = requestAnimationFrame(drawScene);
        console.log(`Animation Resumed. Frame ${req} requested.`);
      }
    };
    window.addEventListener('blur', onBlur);
    window.addEventListener('focus', onFocus);
    drawScene(0, true);
    if (document.hasFocus())
    {
      req = requestAnimationFrame(drawScene);
    }
}

main();
